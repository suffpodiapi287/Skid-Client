package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.value.BoolValue
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C01PacketChatMessage
import net.minecraft.network.play.client.C02PacketUseEntity
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement
import net.minecraft.network.play.client.C09PacketHeldItemChange
import net.minecraft.network.play.client.C0APacketAnimation
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C0CPacketInput
import net.minecraft.network.play.client.C0DPacketCloseWindow
import net.minecraft.network.play.client.C0EPacketClickWindow
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.client.C10PacketCreativeInventoryAction
import net.minecraft.network.play.client.C11PacketEnchantItem
import net.minecraft.network.play.client.C12PacketUpdateSign
import net.minecraft.network.play.client.C13PacketPlayerAbilities
import net.minecraft.network.play.client.C14PacketTabComplete
import net.minecraft.network.play.client.C15PacketClientSettings
import net.minecraft.network.play.client.C16PacketClientStatus
import net.minecraft.network.play.client.C17PacketCustomPayload
import net.minecraft.network.play.client.C18PacketSpectate
import net.minecraft.network.play.client.C19PacketResourcePackStatus
import net.minecraft.network.play.server.S00PacketKeepAlive
import net.minecraft.network.play.server.S01PacketJoinGame
import net.minecraft.network.play.server.S02PacketChat
import net.minecraft.network.play.server.S03PacketTimeUpdate
import net.minecraft.network.play.server.S04PacketEntityEquipment
import net.minecraft.network.play.server.S05PacketSpawnPosition
import net.minecraft.network.play.server.S06PacketUpdateHealth
import net.minecraft.network.play.server.S07PacketRespawn
import net.minecraft.network.play.server.S08PacketPlayerPosLook
import net.minecraft.network.play.server.S09PacketHeldItemChange
import net.minecraft.network.play.server.S0APacketUseBed
import net.minecraft.network.play.server.S0BPacketAnimation
import net.minecraft.network.play.server.S0CPacketSpawnPlayer
import net.minecraft.network.play.server.S0DPacketCollectItem
import net.minecraft.network.play.server.S0EPacketSpawnObject
import net.minecraft.network.play.server.S0FPacketSpawnMob
import net.minecraft.network.play.server.S10PacketSpawnPainting
import net.minecraft.network.play.server.S11PacketSpawnExperienceOrb
import net.minecraft.network.play.server.S12PacketEntityVelocity
import net.minecraft.network.play.server.S13PacketDestroyEntities
import net.minecraft.network.play.server.S14PacketEntity
import net.minecraft.network.play.server.S18PacketEntityTeleport
import net.minecraft.network.play.server.S19PacketEntityStatus
import net.minecraft.network.play.server.S1BPacketEntityAttach
import net.minecraft.network.play.server.S1CPacketEntityMetadata
import net.minecraft.network.play.server.S1DPacketEntityEffect
import net.minecraft.network.play.server.S1EPacketRemoveEntityEffect
import net.minecraft.network.play.server.S1FPacketSetExperience
import net.minecraft.network.play.server.S20PacketEntityProperties
import net.minecraft.network.play.server.S21PacketChunkData
import net.minecraft.network.play.server.S22PacketMultiBlockChange
import net.minecraft.network.play.server.S23PacketBlockChange
import net.minecraft.network.play.server.S24PacketBlockAction
import net.minecraft.network.play.server.S25PacketBlockBreakAnim
import net.minecraft.network.play.server.S26PacketMapChunkBulk
import net.minecraft.network.play.server.S27PacketExplosion
import net.minecraft.network.play.server.S28PacketEffect
import net.minecraft.network.play.server.S29PacketSoundEffect
import net.minecraft.network.play.server.S2APacketParticles
import net.minecraft.network.play.server.S2BPacketChangeGameState
import net.minecraft.network.play.server.S2CPacketSpawnGlobalEntity
import net.minecraft.network.play.server.S2DPacketOpenWindow
import net.minecraft.network.play.server.S2EPacketCloseWindow
import net.minecraft.network.play.server.S2FPacketSetSlot
import net.minecraft.network.play.server.S30PacketWindowItems
import net.minecraft.network.play.server.S31PacketWindowProperty
import net.minecraft.network.play.server.S32PacketConfirmTransaction
import net.minecraft.network.play.server.S33PacketUpdateSign
import net.minecraft.network.play.server.S34PacketMaps
import net.minecraft.network.play.server.S35PacketUpdateTileEntity
import net.minecraft.network.play.server.S36PacketSignEditorOpen
import net.minecraft.network.play.server.S37PacketStatistics
import net.minecraft.network.play.server.S38PacketPlayerListItem
import net.minecraft.network.play.server.S39PacketPlayerAbilities
import net.minecraft.network.play.server.S3APacketTabComplete
import net.minecraft.network.play.server.S3BPacketScoreboardObjective
import net.minecraft.network.play.server.S3CPacketUpdateScore
import net.minecraft.network.play.server.S3DPacketDisplayScoreboard
import net.minecraft.network.play.server.S3EPacketTeams
import net.minecraft.network.play.server.S3FPacketCustomPayload
import net.minecraft.network.play.server.S40PacketDisconnect
import net.minecraft.network.play.server.S41PacketServerDifficulty
import net.minecraft.network.play.server.S42PacketCombatEvent
import net.minecraft.network.play.server.S43PacketCamera
import net.minecraft.network.play.server.S44PacketWorldBorder
import net.minecraft.network.play.server.S45PacketTitle
import net.minecraft.network.play.server.S46PacketSetCompressionLevel
import net.minecraft.network.play.server.S47PacketPlayerListHeaderFooter
import net.minecraft.network.play.server.S48PacketResourcePackSend
import net.minecraft.network.play.server.S49PacketUpdateEntityNBT
import kotlin.jvm.internal.Intrinsics

class CustomDisabler : Module(name = "CustomDisabler", category = ModuleCategory.EXPLOIT) {
 
    @EventTarget
    fun onPacket(event: PacketEvent) {
        val packet: Packet<*> = event.packet
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0FPacketConfirmTransaction.get() as Boolean) && packet is C0FPacketConfirmTransaction) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0APacketAnimation.get() as Boolean) && packet is C0APacketAnimation) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0BPacketEntityAction.get() as Boolean) && packet is C0BPacketEntityAction) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0CPacketInput.get() as Boolean) && packet is C0CPacketInput) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0DPacketCloseWindow.get() as Boolean) && packet is C0DPacketCloseWindow) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C0EPacketClickWindow.get() as Boolean) && packet is C0EPacketClickWindow) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C00PacketKeepAlive.get() as Boolean) && packet is C00PacketKeepAlive) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C01PacketChatMessage.get() as Boolean) && packet is C01PacketChatMessage) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C02PacketUseEntity.get() as Boolean) && packet is C02PacketUseEntity) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C03PacketPlayer.get() as Boolean) && packet is C03PacketPlayer) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C04PacketPlayerPosition.get() as Boolean) && packet is C03PacketPlayer.C04PacketPlayerPosition) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C05PacketPlayerLook.get() as Boolean) && packet is C03PacketPlayer.C05PacketPlayerLook) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C06PacketPlayerPosLook.get() as Boolean) && packet is C03PacketPlayer.C06PacketPlayerPosLook) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C07PacketPlayerDigging.get() as Boolean) && packet is C07PacketPlayerDigging) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C08PacketPlayerBlockPlacement.get() as Boolean) && packet is C08PacketPlayerBlockPlacement) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C09PacketHeldItemChange.get() as Boolean) && packet is C09PacketHeldItemChange) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C10PacketCreativeInventoryAction.get() as Boolean) && packet is C10PacketCreativeInventoryAction) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C11PacketEnchantItem.get() as Boolean) && packet is C11PacketEnchantItem) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C12PacketUpdateSign.get() as Boolean) && packet is C12PacketUpdateSign) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C13PacketPlayerAbilities.get() as Boolean) && packet is C13PacketPlayerAbilities) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C14PacketTabComplete.get() as Boolean) && packet is C14PacketTabComplete) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C15PacketClientSettings.get() as Boolean) && packet is C15PacketClientSettings) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C16PacketClientStatus.get() as Boolean) && packet is C16PacketClientStatus) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C17PacketCustomPayload.get() as Boolean) && packet is C17PacketCustomPayload) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C18PacketSpectate.get() as Boolean) && packet is C18PacketSpectate) {
            event.cancelEvent()
        }
        if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.C19PacketResourcePackStatus.get() as Boolean)) {
            if (packet is C19PacketResourcePackStatus) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0APacketUseBed.get() as Boolean) && packet is S0APacketUseBed) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0BPacketAnimation.get() as Boolean) && packet is S0BPacketAnimation) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0CPacketSpawnPlayer.get() as Boolean) && packet is S0CPacketSpawnPlayer) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0DPacketCollectItem.get() as Boolean) && packet is S0DPacketCollectItem) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0EPacketSpawnObject.get() as Boolean) && packet is S0EPacketSpawnObject) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S0FPacketSpawnMob.get() as Boolean) && packet is S0FPacketSpawnMob) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S00PacketKeepAlive.get() as Boolean) && packet is S00PacketKeepAlive) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S1BPacketEntityAttach.get() as Boolean) && packet is S1BPacketEntityAttach) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S1CPacketEntityMetadata.get() as Boolean) && packet is S1CPacketEntityMetadata) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S1DPacketEntityEffect.get() as Boolean) && packet is S1DPacketEntityEffect) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S1EPacketRemoveEntityEffect.get() as Boolean) && packet is S1EPacketRemoveEntityEffect) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S1FPacketSetExperience.get() as Boolean) && packet is S1FPacketSetExperience) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S01PacketJoinGame.get() as Boolean) && packet is S01PacketJoinGame) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2APacketParticles.get() as Boolean) && packet is S2APacketParticles) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2BPacketChangeGameState.get() as Boolean) && packet is S2BPacketChangeGameState) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2CPacketSpawnGlobalEntity.get() as Boolean) && packet is S2CPacketSpawnGlobalEntity) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2DPacketOpenWindow.get() as Boolean) && packet is S2DPacketOpenWindow) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2EPacketCloseWindow.get() as Boolean) && packet is S2EPacketCloseWindow) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S2FPacketSetSlot.get() as Boolean) && packet is S2FPacketSetSlot) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S02PacketChat.get() as Boolean) && packet is S02PacketChat) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3APacketTabComplete.get() as Boolean) && packet is S3APacketTabComplete) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3BPacketScoreboardObjective.get() as Boolean) && packet is S3BPacketScoreboardObjective) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3CPacketUpdateScore.get() as Boolean) && packet is S3CPacketUpdateScore) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3DPacketDisplayScoreboard.get() as Boolean) && packet is S3DPacketDisplayScoreboard) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3EPacketTeams.get() as Boolean) && packet is S3EPacketTeams) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S3FPacketCustomPayload.get() as Boolean) && packet is S3FPacketCustomPayload) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S03PacketTimeUpdate.get() as Boolean) && packet is S03PacketTimeUpdate) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S04PacketEntityEquipment.get() as Boolean) && packet is S04PacketEntityEquipment) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S05PacketSpawnPosition.get() as Boolean) && packet is S05PacketSpawnPosition) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S06PacketUpdateHealth.get() as Boolean) && packet is S06PacketUpdateHealth) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S07PacketRespawn.get() as Boolean) && packet is S07PacketRespawn) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S08PacketPlayerPosLook.get() as Boolean) && packet is S08PacketPlayerPosLook) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S09PacketHeldItemChange.get() as Boolean) && packet is S09PacketHeldItemChange) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S10PacketSpawnPainting.get() as Boolean) && packet is S10PacketSpawnPainting) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S11PacketSpawnExperienceOrb.get() as Boolean) && packet is S11PacketSpawnExperienceOrb) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S12PacketEntityVelocity.get() as Boolean) && packet is S12PacketEntityVelocity) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S13PacketDestroyEntities.get() as Boolean) && packet is S13PacketDestroyEntities) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S14PacketEntity.get() as Boolean) && packet is S14PacketEntity) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S15PacketEntityRelMove.get() as Boolean) && packet is S14PacketEntity.S15PacketEntityRelMove) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S16PacketEntityLook.get() as Boolean) && packet is S14PacketEntity.S16PacketEntityLook) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S17PacketEntityLookMove.get() as Boolean) && packet is S14PacketEntity.S17PacketEntityLookMove) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S18PacketEntityTeleport.get() as Boolean) && packet is S18PacketEntityTeleport) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S19PacketEntityStatus.get() as Boolean) && packet is S19PacketEntityStatus) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S20PacketEntityProperties.get() as Boolean) && packet is S20PacketEntityProperties) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S21PacketChunkData.get() as Boolean) && packet is S21PacketChunkData) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S22PacketMultiBlockChange.get() as Boolean) && packet is S22PacketMultiBlockChange) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S23PacketBlockChange.get() as Boolean) && packet is S23PacketBlockChange) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S24PacketBlockAction.get() as Boolean) && packet is S24PacketBlockAction) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S25PacketBlockBreakAnim.get() as Boolean) && packet is S25PacketBlockBreakAnim) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S26PacketMapChunkBulk.get() as Boolean) && packet is S26PacketMapChunkBulk) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S27PacketExplosion.get() as Boolean) && packet is S27PacketExplosion) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S28PacketEffect.get() as Boolean) && packet is S28PacketEffect) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S29PacketSoundEffect.get() as Boolean) && packet is S29PacketSoundEffect) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S30PacketWindowItems.get() as Boolean) && packet is S30PacketWindowItems) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S31PacketWindowProperty.get() as Boolean) && packet is S31PacketWindowProperty) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S32PacketConfirmTransaction.get() as Boolean) && packet is S32PacketConfirmTransaction) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S33PacketUpdateSign.get() as Boolean) && packet is S33PacketUpdateSign) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S34PacketMaps.get() as Boolean) && packet is S34PacketMaps) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S35PacketUpdateTileEntity.get() as Boolean) && packet is S35PacketUpdateTileEntity) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S36PacketSignEditorOpen.get() as Boolean) && packet is S36PacketSignEditorOpen) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S37PacketStatistics.get() as Boolean) && packet is S37PacketStatistics) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S38PacketPlayerListItem.get() as Boolean) && packet is S38PacketPlayerListItem) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S39PacketPlayerAbilities.get() as Boolean) && packet is S39PacketPlayerAbilities) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S40PacketDisconnect.get() as Boolean) && packet is S40PacketDisconnect) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S41PacketServerDifficulty.get() as Boolean) && packet is S41PacketServerDifficulty) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S42PacketCombatEvent.get() as Boolean) && packet is S42PacketCombatEvent) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S43PacketCamera.get() as Boolean) && packet is S43PacketCamera) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S44PacketWorldBorder.get() as Boolean) && packet is S44PacketWorldBorder) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S45PacketTitle.get() as Boolean) && packet is S45PacketTitle) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S46PacketSetCompressionLevel.get() as Boolean) && packet is S46PacketSetCompressionLevel) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S47PacketPlayerListHeaderFooter.get() as Boolean) && packet is S47PacketPlayerListHeaderFooter) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S48PacketResourcePackSend.get() as Boolean) && packet is S48PacketResourcePackSend) {
                event.cancelEvent()
            }
            if ((net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler.Companion.S49PacketUpdateEntityNBT.get() as Boolean) && packet is S49PacketUpdateEntityNBT) {
                event.cancelEvent()
            }
        }
    }

    companion object {
        val INSTANCE: CustomDisabler = net.ccbluex.liquidbounce.features.module.modules.exploit.CustomDisabler()
        private val C0FPacketConfirmTransaction: BoolValue = BoolValue("C0FPacketConfirmTransaction", false)
        private val C0APacketAnimation: BoolValue = BoolValue("C0APacketAnimation", false)
        private val C0BPacketEntityAction: BoolValue = BoolValue("C0BPacketEntityAction", false)
        private val C0CPacketInput: BoolValue = BoolValue("C0CPacketInput", false)
        private val C0DPacketCloseWindow: BoolValue = BoolValue("C0DPacketCloseWindow", false)
        private val C0EPacketClickWindow: BoolValue = BoolValue("C0EPacketClickWindow", false)
        private val C00PacketKeepAlive: BoolValue = BoolValue("C00PacketKeepAlive", false)
        private val C01PacketChatMessage: BoolValue = BoolValue("C01PacketChatMessage", false)
        private val C02PacketUseEntity: BoolValue = BoolValue("C02PacketUseEntity", false)
        private val C03PacketPlayer: BoolValue = BoolValue("C03PacketPlayer", false)
        private val C04PacketPlayerPosition: BoolValue = BoolValue("C04PacketPlayerPosition", false)
        private val C05PacketPlayerLook: BoolValue = BoolValue("C05PacketPlayerLook", false)
        private val C06PacketPlayerPosLook: BoolValue = BoolValue("C06PacketPlayerPosLook", false)
        private val C07PacketPlayerDigging: BoolValue = BoolValue("C07PacketPlayerDigging", false)
        private val C08PacketPlayerBlockPlacement: BoolValue = BoolValue("C08PacketPlayerBlockPlacement", false)
        private val C09PacketHeldItemChange: BoolValue = BoolValue("C09PacketHeldItemChange", false)
        private val C10PacketCreativeInventoryAction: BoolValue = BoolValue("C10PacketCreativeInventoryAction", false)
        private val C11PacketEnchantItem: BoolValue = BoolValue("C11PacketEnchantItem", false)
        private val C12PacketUpdateSign: BoolValue = BoolValue("C12PacketUpdateSign", false)
        private val C13PacketPlayerAbilities: BoolValue = BoolValue("C13PacketPlayerAbilities", false)
        private val C14PacketTabComplete: BoolValue = BoolValue("C14PacketTabComplete", false)
        private val C15PacketClientSettings: BoolValue = BoolValue("C15PacketClientSetting", false)
        private val C16PacketClientStatus: BoolValue = BoolValue("C16PacketClientStatus", false)
        private val C17PacketCustomPayload: BoolValue = BoolValue("C17CustomPayload", false)
        private val C18PacketSpectate: BoolValue = BoolValue("C18PacketSpectate", false)
        private val C19PacketResourcePackStatus: BoolValue = BoolValue("C19PacketResourcePackStatus", false)
        private val S0APacketUseBed: BoolValue = BoolValue("S0APacketUseBed", false)
        private val S0BPacketAnimation: BoolValue = BoolValue("S0BPacketAnimation", false)
        private val S0CPacketSpawnPlayer: BoolValue = BoolValue("S0CPacketSpawnPlayer", false)
        private val S0DPacketCollectItem: BoolValue = BoolValue("S0DPacketCollectItem", false)
        private val S0EPacketSpawnObject: BoolValue = BoolValue("S0EPacketSpawnObject", false)
        private val S0FPacketSpawnMob: BoolValue = BoolValue("S0FPacketSpawnMob", false)
        private val S00PacketKeepAlive: BoolValue = BoolValue("S00PacketKeepAlive", false)
        private val S1BPacketEntityAttach: BoolValue = BoolValue("S1BPacketEntityAttach", false)
        private val S1CPacketEntityMetadata: BoolValue = BoolValue("S1CPacketEntityMetadata", false)
        private val S1DPacketEntityEffect: BoolValue = BoolValue("S1DPacketEntityEffect", false)
        private val S1EPacketRemoveEntityEffect: BoolValue = BoolValue("S1EPacketRemoveEntityEffect", false)
        private val S1FPacketSetExperience: BoolValue = BoolValue("S1FPacketSetExperience", false)
        private val S01PacketJoinGame: BoolValue = BoolValue("S01PacketJoinGame", false)
        private val S2APacketParticles: BoolValue = BoolValue("S2APacketParticles", false)
        private val S2BPacketChangeGameState: BoolValue = BoolValue("S2BPacketChangeGameState", false)
        private val S2CPacketSpawnGlobalEntity: BoolValue = BoolValue("S2CPacketSpawnGlobalEntity", false)
        private val S2DPacketOpenWindow: BoolValue = BoolValue("S2DPacketOpenWindow", false)
        private val S2EPacketCloseWindow: BoolValue = BoolValue("S2EPacketCloseWindow", false)
        private val S2FPacketSetSlot: BoolValue = BoolValue("S2FPacketSetSlot", false)
        private val S02PacketChat: BoolValue = BoolValue("S02PacketChat", false)
        private val S3APacketTabComplete: BoolValue = BoolValue("S3APacketTabComplete", false)
        private val S3BPacketScoreboardObjective: BoolValue = BoolValue("S3BPacketScoreboardObjective", false)
        private val S3CPacketUpdateScore: BoolValue = BoolValue("S3CPacketUpdateScore", false)
        private val S3DPacketDisplayScoreboard: BoolValue = BoolValue("S3DPacketDisplayScoreboard", false)
        private val S3EPacketTeams: BoolValue = BoolValue("S3EPacketTeams", false)
        private val S3FPacketCustomPayload: BoolValue = BoolValue("S3FPacketCustomPayload", false)
        private val S03PacketTimeUpdate: BoolValue = BoolValue("S03PacketTimeUpdate", false)
        private val S04PacketEntityEquipment: BoolValue = BoolValue("S04PacketEntityEquipment", false)
        private val S05PacketSpawnPosition: BoolValue = BoolValue("S05PacketSpawnPosition", false)
        private val S06PacketUpdateHealth: BoolValue = BoolValue("S06PacketUpdateHealth", false)
        private val S07PacketRespawn: BoolValue = BoolValue("S07PacketRespawn", false)
        private val S08PacketPlayerPosLook: BoolValue = BoolValue("S08PacketPlayerPosLook", false)
        private val S09PacketHeldItemChange: BoolValue = BoolValue("S09PacketHeldItemChange", false)
        private val S10PacketSpawnPainting: BoolValue = BoolValue("S10PacketSpawnPainting", false)
        private val S11PacketSpawnExperienceOrb: BoolValue = BoolValue("S11PacketSpawnExperienceOrb", false)
        private val S12PacketEntityVelocity: BoolValue = BoolValue("S12PacketEntityVelocity", false)
        private val S13PacketDestroyEntities: BoolValue = BoolValue("S13PacketDestroyEntities", false)
        private val S14PacketEntity: BoolValue = BoolValue("S14PacketEntity", false)
        private val S15PacketEntityRelMove: BoolValue = BoolValue("S15PacketEntityRelMove", false)
        private val S16PacketEntityLook: BoolValue = BoolValue("S16PacketEntityLook", false)
        private val S17PacketEntityLookMove: BoolValue = BoolValue("S17PacketEntityLookMove", false)
        private val S18PacketEntityTeleport: BoolValue = BoolValue("S18PacketEntityTeleport", false)
        private val S19PacketEntityStatus: BoolValue = BoolValue("S19PacketEntityStatus", false)
        private val S20PacketEntityProperties: BoolValue = BoolValue("S20PacketEntityProperties", false)
        private val S21PacketChunkData: BoolValue = BoolValue("S21PacketChunkData", false)
        private val S22PacketMultiBlockChange: BoolValue = BoolValue("S22PacketMultiBlockChange", false)
        private val S23PacketBlockChange: BoolValue = BoolValue("S23PacketBlockChange", false)
        private val S24PacketBlockAction: BoolValue = BoolValue("S24PacketBlockAction", false)
        private val S25PacketBlockBreakAnim: BoolValue = BoolValue("S25PacketBlockBreakAnim", false)
        private val S26PacketMapChunkBulk: BoolValue = BoolValue("S26PacketMapChunkBulk", false)
        private val S27PacketExplosion: BoolValue = BoolValue("S27PacketExplosion", false)
        private val S28PacketEffect: BoolValue = BoolValue("S28PacketEffect", false)
        private val S29PacketSoundEffect: BoolValue = BoolValue("S29PacketSoundEffect", false)
        private val S30PacketWindowItems: BoolValue = BoolValue("S30PacketWindowItems", false)
        private val S31PacketWindowProperty: BoolValue = BoolValue("S31PacketWindowProperty", false)
        private val S32PacketConfirmTransaction: BoolValue = BoolValue("S32PacketConfirmTransaction", false)
        private val S33PacketUpdateSign: BoolValue = BoolValue("S33PacketUpdateSign", false)
        private val S34PacketMaps: BoolValue = BoolValue("S34PacketMaps", false)
        private val S35PacketUpdateTileEntity: BoolValue = BoolValue("S35PacketUpdateTitleEntity", false)
        private val S36PacketSignEditorOpen: BoolValue = BoolValue("S36PacketSignEditorOpen", false)
        private val S37PacketStatistics: BoolValue = BoolValue("S37PacketStatics", false)
        private val S38PacketPlayerListItem: BoolValue = BoolValue("S39PacketPlayerListItem", false)
        private val S39PacketPlayerAbilities: BoolValue = BoolValue("S39PacketPlayerAbilities", false)
        private val S40PacketDisconnect: BoolValue = BoolValue("S40PacketDisconnect", false)
        private val S41PacketServerDifficulty: BoolValue = BoolValue("S41PacketServerDifficulty", false)
        private val S42PacketCombatEvent: BoolValue = BoolValue("S42PacketCombatEvent", false)
        private val S43PacketCamera: BoolValue = BoolValue("S43PacketCamera", false)
        private val S44PacketWorldBorder: BoolValue = BoolValue("S44PacketWorldBorder", false)
        private val S45PacketTitle: BoolValue = BoolValue("S45PacketTitle", false)
        private val S46PacketSetCompressionLevel: BoolValue = BoolValue("S46PacketSetCompressionLevel", false)
        private val S47PacketPlayerListHeaderFooter: BoolValue = BoolValue("S47PacketPlayerListHeaderFooter", false)
        private val S48PacketResourcePackSend: BoolValue = BoolValue("S48PacketResourcePackSend", false)
        private val S49PacketUpdateEntityNBT: BoolValue = BoolValue("S49PacketUpdateEntityNBT", false)
    }
}
